#+PROPERTY: header-args  :session thesis :kernel python3 :async yes

#+TITLE: Thesis title
#+author: Adam Smith
#+options: toc:nil

#+begin_abstract
In this thesis we show that ...

In this document I show the syntax to type in latex or org-mode
#+end_abstract

#+LATEX: \newpage



#+TOC: headlines 2


* Introduction
\label{sec:intro}

This file shows you how to use [[https://www.gnu.org/software/emacs/][emacs]] [[https://orgmode.org/][org mode]] to write a thesis. Shows you how to cite references, make footnotes, equations etc.

Alternatively, you can use latex directly in which case you can consider the file in this repository that ends in =.tex=.

In order to use emacs, you need to install it. The official website's download information: https://www.gnu.org/software/emacs/download.html

Install emacs 27.2 or later


** Emacs on Windows

Probably this is hardest for windows (compared to linux and mac os); here is a video on how to install it on windows: https://www.youtube.com/watch?v=1VPHA2Lc2zQ&t=50s

- go to: http://mirror.team-cymru.com/gnu/emacs/windows/emacs-27/
- download emacs-27.2-x86_64-installer.exe to your Downloads folder: http://mirror.team-cymru.com/gnu/emacs/windows/emacs-27/emacs-27.2-x86_64-installer.exe
- run the downloaded =exe= file

** Emacs on Mac OS

For Mac Os:
- install homebrew: https://brew.sh/

Open a terminal and type the following lines:

#+begin_src shell
brew tap d12frosted/emacs-plus
brew install emacs-plus
#+end_src

** Emacs on Linux

When you are using Linux, you probably know what you are doing. But just in case, the commands for your package manager can be found here: https://www.gnu.org/software/emacs/download.html





When you install emacs, org-mode is installed as well (comes with emacs)

https://systemcrafters.net/emacs-essentials/absolute-beginners-guide-to-emacs/

video: https://www.youtube.com/watch?v=48JlgiBpw_I








Install latex: https://www.latex-project.org/get/

install git: https://git-scm.com/downloads


** basic configuration :noexport:

Make emacs look better:

https://github.com/daviwil/emacs-from-scratch/blob/3075158cae210060888001c0d76a58a4178f6a00/init.el

https://www.youtube.com/watch?v=74zOY-vgkyw&t=148s

I use the font Source Code Pro which can be downloaded here: https://fonts.google.com/specimen/Source+Code+Pro



#+begin_src emacs-lisp :tangle ./init.el
	(setq inhibit-startup-message t)

	(scroll-bar-mode -1)        ; Disable visible scrollbar
	(tool-bar-mode -1)          ; Disable the toolbar
	(tooltip-mode -1)           ; Disable tooltips
	(set-fringe-mode 10)        ; Give some breathing room

	(menu-bar-mode +1)            ; Disable the menu bar: use -1

	;; Set up the visible bell
	(setq visible-bell t)

	(set-face-attribute 'default nil :font "Source Code Pro" :height 280)

	(load-theme 'wombat)

	;; Make ESC quit prompts
	(global-set-key (kbd "<escape>") 'keyboard-escape-quit)

	;; Initialize package sources
	(require 'package)

	(setq package-archives '(("melpa" . "https://melpa.org/packages/")
				 ("org" . "https://orgmode.org/elpa/")
				 ("elpa" . "https://elpa.gnu.org/packages/")))

	(package-initialize)
	(unless package-archive-contents
	 (package-refresh-contents))

	;; Initialize use-package on non-Linux platforms
	(unless (package-installed-p 'use-package)
	   (package-install 'use-package))

	(require 'use-package)
	(setq use-package-always-ensure t)

	(use-package command-log-mode)

	(use-package ivy
	  :diminish
	  :bind (("C-s" . swiper)
		 :map ivy-minibuffer-map
		 ("TAB" . ivy-alt-done)	
		 ("C-l" . ivy-alt-done)
		 ("C-j" . ivy-next-line)
		 ("C-k" . ivy-previous-line)
		 :map ivy-switch-buffer-map
		 ("C-k" . ivy-previous-line)
		 ("C-l" . ivy-done)
		 ("C-d" . ivy-switch-buffer-kill)
		 :map ivy-reverse-i-search-map
		 ("C-k" . ivy-previous-line)
		 ("C-d" . ivy-reverse-i-search-kill))
	  :config
	  (ivy-mode 1))

	(use-package doom-modeline
	  :ensure t
	  :init (doom-modeline-mode 1)
	  :custom ((doom-modeline-height 10)))

      (setq org-confirm-babel-evaluate nil)

    (use-package auctex
       :defer t
       :ensure t)

    (use-package cdlatex
       :ensure t)

    (add-hook 'LaTeX-mode-hook 'turn-on-reftex)
    (add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)
    (add-hook 'LaTeX-mode-hook 'cdlatex-mode)

  (use-package org-ref)
  (use-package magit)


#+end_src

#+RESULTS:



** next steps

   *** scimax

   https://github.com/jkitchin/scimax

   youtube playlist with scimax features: https://www.youtube.com/playlist?list=PL0sMmOaE_gs3E0OjExoI7vlCAVygj6S4I

   *** Doom

   https://github.com/hlissner/doom-emacs

   Doom emacs for noobs: https://www.youtube.com/watch?v=iab2z21cRqA

   Doom emacs getting started: https://www.youtube.com/watch?v=dr_iBj91eeI


   youtube playlist: https://www.youtube.com/playlist?list=PLhXZp00uXBk4np17N39WvB80zgxlZfVwj




* Literature references



  
** org cite

https://blog.tecosaur.com/tmio/2021-07-31-citations.html

[cite:@athey-2019-machin-learn]




** org-ref


https://github.com/jkitchin/org-ref

See [[cite:&armstrong-2007-chapt-coord]] for an analysis. We can also have references between brackets [[citep:&athey-2019-machin-learn]].


* Model

As we explained in section ref:sec:intro.

Here we have some in-line math: $x^2$.[fn::This is a footnote.]

\begin{equation}
\label{eq:1}
a^2 + b^2 = c^2
\end{equation}

As we show in equation eqref:eq:1.

#+name: table1
#+caption: This table shows unemployment and gdp per head.
| country | unemployment |   gdp |
|---------+--------------+-------|
| NL      |         0.06 | 20000 |
| UK      |         0.01 | 19500 |
| BE      |         0.08 | 21100 |
|---------+--------------+-------|
| average |         0.05 | 20200 |
#+TBLFM: @5$2=vmean(@2$2..@4$2)::@5$3=vmean(@2$3..@4$3)


#+name: figure1
#+caption: Figure with unemployment and gdp
 [[./fig.png]]

See Figure ref:figure1.


** code :noexport:

#+begin_src emacs-lisp
  ;; This is needed as of Org 9.2
  (require 'org-tempo)

  (add-to-list 'org-structure-template-alist '("sh" . "src shell"))
  (add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
  (add-to-list 'org-structure-template-alist '("py" . "src python"))
  (add-to-list 'org-structure-template-alist '("jp" . "src jupyter-python"))

  (org-babel-do-load-languages 'org-babel-load-languages
			       '((emacs-lisp . t)
				 (python . t)
				 ;;(jupyter . t)
				 ))
#+end_src

#+RESULTS:



#+begin_src python :var data=table1

  import numpy as np
  import pandas as pd
  import matplotlib.pyplot as plt

  X = np.array(data)
  df = pd.DataFrame(X[1:,:],columns=X[0,:])
  df = df.astype({'gdp':float,'unemployment':float})

  plt.plot(df.gdp,df.unemployment,'o')
  plt.savefig('fig.png')


#+end_src

#+RESULTS:
: None

#+begin_src python

#+end_src

* Conclusion



* Bibliography

** org ref

bibliography:./references.bib

** org cite

#+bibliography: references.bib
#+print_bibliography:
